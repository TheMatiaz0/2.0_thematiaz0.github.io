---
layout: default
permalink: "{{ page.filePathStem }}.html"
---

<section class="py-64 md:py-40">
<div class="flex justify-between">
    <h2 class="whitespace-nowrap introduction">All Projects</h2>
    <div class="buttons flex flex-wrap justify-between gap-4"></div>
    <a href="/" class="flex justify-end items-center align-middle secondary hover:text-white gap-3">
        <svg class="w-6 h-6" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!--! Font Awesome Pro 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path class="w-1 h-1" fill="currentColor" d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"/></svg>
        <h4>Go Back</h4>
    </a>
</div>
    <div class="projects grid grid-cols-1 md:grid-cols-2 justify-between py-6 gap-12"></div>
</section>

{# remember to refresh 11ty without serve to apply changes #}
<script src="nunjucks.js"></script>
<script>

const params = new Proxy(new URLSearchParams(window.location.search), {
  get: (searchParams, prop) => searchParams.get(prop),
});

const projectsDiv = document.querySelector('.projects');
const parsedProjects = JSON.parse(`{{ projects | json }}`);
const projectTemplate = `{% includeraw ".\\src\\_includes\\project-card.njk" %}`;

update();

function update() {
    let filtered = parsedProjects.filter(x => x.details.tags.includes(params.filter));
    let projectList = filtered.length <= 0 ? parsedProjects : filtered;
    projectsDiv.innerHTML = projectList.map(x => nunjucks.renderString(projectTemplate, {projectItem: x})).join('');
    // buttonsDiv.innerHTML = languages.map(buttonTemplate).join('');;
}

// const buttonsDiv = document.querySelector('.buttons');
// const buttonTemplate = (language) => `<button class="btn-secondary" onclick="selectLang('${language}')">${language}</button>`;

/*
function selectLang(language) {
    var searchParams;
    if (language) {
        searchParams = new URLSearchParams(window.location.search);
        searchParams.set("filter", language);
        window.location.search = searchParams.toString();
    }
    else {
        searchParams = new URLSearchParams();
        window.location.href = `${window.location.origin}${window.location.pathname}`
    }
    update();
}
*/


</script>